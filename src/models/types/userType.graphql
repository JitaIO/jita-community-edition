type _UserInput

type User {
    UUID: UUID!
    email: String!
    password: String
    hash: String
    name: String
    projects: [Project] @relation(name: "IS_IN", direction: "OUT")
    tasks: [Task] @relation(name: "ASSIGNED_TO", direction: "OUT")
    activated: Boolean
    created_date: DateTime
    last_updated: DateTime
}

type Query {
    User(email: String): User
    Users: [User]
}

type Mutation {
    CreateUser(UUID: UUID!, email: String!, password: String!, hash: String, name: String, activated: Boolean, created_date: DateTime, last_updated: DateTime): User
    UpdateUser(UUID: UUID!, email: String!, password: String!, hash: String, name: String, activated: Boolean, last_updated: DateTime): User
    DeleteUser(UUID: UUID!, email: String!, password: String!): User
}